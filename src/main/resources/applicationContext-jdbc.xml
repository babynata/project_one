<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

    <context:property-placeholder location="classpath:/prop/config.properties"></context:property-placeholder>
    <context:component-scan base-package="project_one"></context:component-scan>
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--多数据源时改成masterDataSource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="name" value="${druid.name}"></property>
        <property name="url" value="${druid.jdbcUrl}"></property>
        <property name="username" value="${druid.username}"/>
        <property name="password" value="${druid.password}"/>
        <!--<property name="password" ref="dbPasswordCallback"/>-->
        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxWait" value="${druid.maxWait}"/>
        <!--<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>-->
        <!--<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}"/>-->
        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="filters" value="${druid.filters}"/>
        <!--<property name="filters" value="config" />-->
        <!--<property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${publickey}" />-->
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:project_one/mybatis/domain/*Mapper.xml"/>
        <property name="typeAliasesPackage" value=""/>
    </bean>

    <!--去掉dao层，service层直接定位mapper-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="project_one.mybatis.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--<bean id="dbPasswordCallback" class="project_one.druid.DBPasswordCallback"></bean>-->

    <!--多数据源-->
    <!--<bean id="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
        <!--<property name="name" value="${druid.name}"></property>-->
        <!--<property name="url" value="${druid.jdbcUrl}"></property>-->
        <!--<property name="username" value="${druid.username}"/>-->
        <!--<property name="password" value="${druid.password}"/>-->
        <!--<property name="initialSize" value="${druid.initialSize}"/>-->
        <!--<property name="maxActive" value="${druid.maxActive}"/>-->
        <!--<property name="minIdle" value="${druid.minIdle}"/>-->
        <!--<property name="maxWait" value="${druid.maxWait}"/>-->
        <!--<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>-->
        <!--<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}"/>-->
        <!--<property name="validationQuery" value="${druid.validationQuery}"/>-->
        <!--<property name="testOnBorrow" value="${druid.testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${druid.testOnReturn}"/>-->
        <!--<property name="testWhileIdle" value="${druid.testWhileIdle}"/>-->
        <!--<property name="filters" value="${druid.filters}"/>-->
    <!--</bean>-->

    <!--<bean id="dataSource" class="project_one.druid.ThreadLocalRourtingDataSource">-->
        <!--<property name="targetDataSources">-->
            <!--<map key-type="project_one.druid.DataSourcesEnum">-->
                <!--<entry key="MASTER" value-ref="masterDataSource"/>-->
                <!--<entry key="SLAVE" value-ref="slaveDataSource"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultTargetDataSource" ref="masterDataSource"/>-->
    <!--</bean>-->


</beans>